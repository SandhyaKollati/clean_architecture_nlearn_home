// Mocks generated by Mockito 5.4.4 from annotations
// in nlearn_v3_home/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nlearn_v3_home/core/network/api_result.dart' as _i13;
import 'package:nlearn_v3_home/core/network/api_service.dart' as _i4;
import 'package:nlearn_v3_home/core/utils/enums/service.dart' as _i23;
import 'package:nlearn_v3_home/features/home/data/datasources/remote/home_remote_data_source.dart'
    as _i24;
import 'package:nlearn_v3_home/features/home/data/models/home_course_info_response_model.dart'
    as _i25;
import 'package:nlearn_v3_home/features/home/data/models/home_disha_config_response_model.dart'
    as _i6;
import 'package:nlearn_v3_home/features/home/data/models/home_learn_practice_response_model.dart'
    as _i7;
import 'package:nlearn_v3_home/features/home/data/models/home_learn_subjects_response_model.dart'
    as _i27;
import 'package:nlearn_v3_home/features/home/data/models/home_learn_video_response_model.dart'
    as _i5;
import 'package:nlearn_v3_home/features/home/data/models/home_revise_now_status_response_model.dart'
    as _i10;
import 'package:nlearn_v3_home/features/home/data/models/home_scheduled_test_response_model.dart'
    as _i26;
import 'package:nlearn_v3_home/features/home/data/models/home_user_features_response_model.dart'
    as _i8;
import 'package:nlearn_v3_home/features/home/data/models/home_user_profile_response_model.dart'
    as _i9;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_course_info_response.dart'
    as _i16;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_disha_config_response.dart'
    as _i15;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_learn_practice_response.dart'
    as _i17;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_learn_subjects_response.dart'
    as _i20;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_learn_video_response.dart'
    as _i14;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_revise_now_status_response.dart'
    as _i22;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_scheduled_test_response.dart'
    as _i19;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_user_features_response.dart'
    as _i18;
import 'package:nlearn_v3_home/features/home/domain/entities/response/home_user_profile_response.dart'
    as _i21;
import 'package:nlearn_v3_home/features/home/domain/repository/home_repository.dart'
    as _i11;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_course_info_usecase.dart'
    as _i28;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_disha_config_usecase.dart'
    as _i36;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_learn_subject_usecase.dart'
    as _i30;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_learn_video_usecase.dart'
    as _i29;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_practice_list_usecase.dart'
    as _i31;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_revise_now_usecase.dart'
    as _i32;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_scheduled_test_usecase.dart'
    as _i33;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_user_features_usecase.dart'
    as _i34;
import 'package:nlearn_v3_home/features/home/domain/usecases/home_user_profile_usecase.dart'
    as _i35;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_1 extends _i1.SmartFake implements _i3.Dio {
  _FakeDio_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_2<T1> extends _i1.SmartFake
    implements _i4.ApiResponse<T1> {
  _FakeApiResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeGetLearnVideoResponseModel_3 extends _i1.SmartFake
    implements _i5.HomeGetLearnVideoResponseModel {
  _FakeHomeGetLearnVideoResponseModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeDishaConfigResponseModel_4 extends _i1.SmartFake
    implements _i6.HomeDishaConfigResponseModel {
  _FakeHomeDishaConfigResponseModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeGetPracticeResponseModel_5 extends _i1.SmartFake
    implements _i7.HomeGetPracticeResponseModel {
  _FakeHomeGetPracticeResponseModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeatureConfigResponseModel_6 extends _i1.SmartFake
    implements _i8.FeatureConfigResponseModel {
  _FakeFeatureConfigResponseModel_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfileInformationResponseModel_7 extends _i1.SmartFake
    implements _i9.UserProfileInformationResponseModel {
  _FakeUserProfileInformationResponseModel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePracticeReviseNowResponseModel_8 extends _i1.SmartFake
    implements _i10.PracticeReviseNowResponseModel {
  _FakePracticeReviseNowResponseModel_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeRepository_9 extends _i1.SmartFake
    implements _i11.HomeRepository {
  _FakeHomeRepository_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i11.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i14.HomeGetLearnVideoResponse>>
      homeGetLearnVideoListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetLearnVideoListRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        _i14.HomeGetLearnVideoResponse>>.value(
                _FakeEither_0<_i13.Failure, _i14.HomeGetLearnVideoResponse>(
              this,
              Invocation.method(
                #homeGetLearnVideoListRequest,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, _i14.HomeGetLearnVideoResponse>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i15.HomeDishaConfigResponse>>
      getDishaConfigRequest() => (super.noSuchMethod(
            Invocation.method(
              #getDishaConfigRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2
                    .Either<_i13.Failure, _i15.HomeDishaConfigResponse>>.value(
                _FakeEither_0<_i13.Failure, _i15.HomeDishaConfigResponse>(
              this,
              Invocation.method(
                #getDishaConfigRequest,
                [],
              ),
            )),
          ) as _i12
              .Future<_i2.Either<_i13.Failure, _i15.HomeDishaConfigResponse>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i16.CourseInformationResponse>>>
      homeGetCourseListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetCourseListRequest,
              [],
            ),
            returnValue: _i12.Future<
                _i2.Either<_i13.Failure,
                    List<_i16.CourseInformationResponse>>>.value(_FakeEither_0<
                _i13.Failure, List<_i16.CourseInformationResponse>>(
              this,
              Invocation.method(
                #homeGetCourseListRequest,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, List<_i16.CourseInformationResponse>>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i17.HomeGetPracticeResponse>>
      homeGetPracticeListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetPracticeListRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2
                    .Either<_i13.Failure, _i17.HomeGetPracticeResponse>>.value(
                _FakeEither_0<_i13.Failure, _i17.HomeGetPracticeResponse>(
              this,
              Invocation.method(
                #homeGetPracticeListRequest,
                [],
              ),
            )),
          ) as _i12
              .Future<_i2.Either<_i13.Failure, _i17.HomeGetPracticeResponse>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i18.FeatureConfigResponse>>
      getFeaturesRequest() => (super.noSuchMethod(
            Invocation.method(
              #getFeaturesRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure, _i18.FeatureConfigResponse>>.value(
                _FakeEither_0<_i13.Failure, _i18.FeatureConfigResponse>(
              this,
              Invocation.method(
                #getFeaturesRequest,
                [],
              ),
            )),
          ) as _i12
              .Future<_i2.Either<_i13.Failure, _i18.FeatureConfigResponse>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i19.HomeGetScheduledTestResponse>>>
      homeGetScheduledTestRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetScheduledTestRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        List<_i19.HomeGetScheduledTestResponse>>>.value(
                _FakeEither_0<_i13.Failure,
                    List<_i19.HomeGetScheduledTestResponse>>(
              this,
              Invocation.method(
                #homeGetScheduledTestRequest,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2
              .Either<_i13.Failure, List<_i19.HomeGetScheduledTestResponse>>>);

  @override
  _i12.Future<
          _i2.Either<_i13.Failure, List<_i20.HomeGetLearnSubjectListResponse>>>
      homeGetLearnSubjectListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetLearnSubjectListRequest,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        List<_i20.HomeGetLearnSubjectListResponse>>>.value(
                _FakeEither_0<_i13.Failure,
                    List<_i20.HomeGetLearnSubjectListResponse>>(
              this,
              Invocation.method(
                #homeGetLearnSubjectListRequest,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure,
                  List<_i20.HomeGetLearnSubjectListResponse>>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i21.UserProfileInformationResponse>>
      getUserProfile() => (super.noSuchMethod(
            Invocation.method(
              #getUserProfile,
              [],
            ),
            returnValue: _i12.Future<
                _i2.Either<_i13.Failure,
                    _i21.UserProfileInformationResponse>>.value(_FakeEither_0<
                _i13.Failure, _i21.UserProfileInformationResponse>(
              this,
              Invocation.method(
                #getUserProfile,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, _i21.UserProfileInformationResponse>>);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i22.PracticeReviseNowResponse>>
      getReviseNowData() => (super.noSuchMethod(
            Invocation.method(
              #getReviseNowData,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        _i22.PracticeReviseNowResponse>>.value(
                _FakeEither_0<_i13.Failure, _i22.PracticeReviseNowResponse>(
              this,
              Invocation.method(
                #getReviseNowData,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, _i22.PracticeReviseNowResponse>>);
}

/// A class which mocks [BaseApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseApiService extends _i1.Mock implements _i4.BaseApiService {
  MockBaseApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_1(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i3.Dio);

  @override
  _i12.Future<_i4.ApiResponse<T>> makeRequest<T>({
    required String? url,
    String? baseUrl,
    dynamic body,
    String? contentType,
    Map<String, dynamic>? queryParameters,
    _i23.RequestType? method = _i23.RequestType.get,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeRequest,
          [],
          {
            #url: url,
            #baseUrl: baseUrl,
            #body: body,
            #contentType: contentType,
            #queryParameters: queryParameters,
            #method: method,
          },
        ),
        returnValue:
            _i12.Future<_i4.ApiResponse<T>>.value(_FakeApiResponse_2<T>(
          this,
          Invocation.method(
            #makeRequest,
            [],
            {
              #url: url,
              #baseUrl: baseUrl,
              #body: body,
              #contentType: contentType,
              #queryParameters: queryParameters,
              #method: method,
            },
          ),
        )),
      ) as _i12.Future<_i4.ApiResponse<T>>);
}

/// A class which mocks [HomeRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDatasource extends _i1.Mock
    implements _i24.HomeRemoteDatasource {
  MockHomeRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i5.HomeGetLearnVideoResponseModel>
      homeGetLearnVideoListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetLearnVideoListRequest,
              [],
            ),
            returnValue: _i12.Future<_i5.HomeGetLearnVideoResponseModel>.value(
                _FakeHomeGetLearnVideoResponseModel_3(
              this,
              Invocation.method(
                #homeGetLearnVideoListRequest,
                [],
              ),
            )),
          ) as _i12.Future<_i5.HomeGetLearnVideoResponseModel>);

  @override
  _i12.Future<_i6.HomeDishaConfigResponseModel> getDishaConfigRequest() =>
      (super.noSuchMethod(
        Invocation.method(
          #getDishaConfigRequest,
          [],
        ),
        returnValue: _i12.Future<_i6.HomeDishaConfigResponseModel>.value(
            _FakeHomeDishaConfigResponseModel_4(
          this,
          Invocation.method(
            #getDishaConfigRequest,
            [],
          ),
        )),
      ) as _i12.Future<_i6.HomeDishaConfigResponseModel>);

  @override
  _i12.Future<List<_i25.CourseInformationResponseModel>>
      homeGetCourseListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetCourseListRequest,
              [],
            ),
            returnValue:
                _i12.Future<List<_i25.CourseInformationResponseModel>>.value(
                    <_i25.CourseInformationResponseModel>[]),
          ) as _i12.Future<List<_i25.CourseInformationResponseModel>>);

  @override
  _i12.Future<_i7.HomeGetPracticeResponseModel> homeGetPracticeListRequest() =>
      (super.noSuchMethod(
        Invocation.method(
          #homeGetPracticeListRequest,
          [],
        ),
        returnValue: _i12.Future<_i7.HomeGetPracticeResponseModel>.value(
            _FakeHomeGetPracticeResponseModel_5(
          this,
          Invocation.method(
            #homeGetPracticeListRequest,
            [],
          ),
        )),
      ) as _i12.Future<_i7.HomeGetPracticeResponseModel>);

  @override
  _i12.Future<_i8.FeatureConfigResponseModel> getFeaturesRequest() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFeaturesRequest,
          [],
        ),
        returnValue: _i12.Future<_i8.FeatureConfigResponseModel>.value(
            _FakeFeatureConfigResponseModel_6(
          this,
          Invocation.method(
            #getFeaturesRequest,
            [],
          ),
        )),
      ) as _i12.Future<_i8.FeatureConfigResponseModel>);

  @override
  _i12.Future<List<_i26.HomeGetScheduledTestResponseModel>>
      homeGetScheduledTestRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetScheduledTestRequest,
              [],
            ),
            returnValue:
                _i12.Future<List<_i26.HomeGetScheduledTestResponseModel>>.value(
                    <_i26.HomeGetScheduledTestResponseModel>[]),
          ) as _i12.Future<List<_i26.HomeGetScheduledTestResponseModel>>);

  @override
  _i12.Future<List<_i27.HomeGetLearnSubjectListResponseModel>>
      homeGetLearnSubjectListRequest() => (super.noSuchMethod(
            Invocation.method(
              #homeGetLearnSubjectListRequest,
              [],
            ),
            returnValue: _i12
                .Future<List<_i27.HomeGetLearnSubjectListResponseModel>>.value(
                <_i27.HomeGetLearnSubjectListResponseModel>[]),
          ) as _i12.Future<List<_i27.HomeGetLearnSubjectListResponseModel>>);

  @override
  _i12.Future<_i9.UserProfileInformationResponseModel> getUserProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i12.Future<_i9.UserProfileInformationResponseModel>.value(
            _FakeUserProfileInformationResponseModel_7(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i12.Future<_i9.UserProfileInformationResponseModel>);

  @override
  _i12.Future<_i10.PracticeReviseNowResponseModel> getReviseNowData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getReviseNowData,
          [],
        ),
        returnValue: _i12.Future<_i10.PracticeReviseNowResponseModel>.value(
            _FakePracticeReviseNowResponseModel_8(
          this,
          Invocation.method(
            #getReviseNowData,
            [],
          ),
        )),
      ) as _i12.Future<_i10.PracticeReviseNowResponseModel>);
}

/// A class which mocks [HomeCourseInfoUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeCourseInfoUseCase extends _i1.Mock
    implements _i28.HomeCourseInfoUseCase {
  MockHomeCourseInfoUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i16.CourseInformationResponse>>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i12.Future<
                _i2.Either<_i13.Failure,
                    List<_i16.CourseInformationResponse>>>.value(_FakeEither_0<
                _i13.Failure, List<_i16.CourseInformationResponse>>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, List<_i16.CourseInformationResponse>>>);
}

/// A class which mocks [HomeLearnVideoListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeLearnVideoListUseCase extends _i1.Mock
    implements _i29.HomeLearnVideoListUseCase {
  MockHomeLearnVideoListUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<
      _i2.Either<_i13.Failure, _i14.HomeGetLearnVideoResponse>> call() => (super
              .noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i12.Future<
                _i2.Either<_i13.Failure, _i14.HomeGetLearnVideoResponse>>.value(
            _FakeEither_0<_i13.Failure, _i14.HomeGetLearnVideoResponse>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i12
          .Future<_i2.Either<_i13.Failure, _i14.HomeGetLearnVideoResponse>>);
}

/// A class which mocks [HomeLearnSubjectUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeLearnSubjectUseCase extends _i1.Mock
    implements _i30.HomeLearnSubjectUseCase {
  MockHomeLearnSubjectUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<
          _i2.Either<_i13.Failure, List<_i20.HomeGetLearnSubjectListResponse>>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        List<_i20.HomeGetLearnSubjectListResponse>>>.value(
                _FakeEither_0<_i13.Failure,
                    List<_i20.HomeGetLearnSubjectListResponse>>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure,
                  List<_i20.HomeGetLearnSubjectListResponse>>>);
}

/// A class which mocks [HomePracticeListUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePracticeListUseCase extends _i1.Mock
    implements _i31.HomePracticeListUseCase {
  MockHomePracticeListUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i17.HomeGetPracticeResponse>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i12.Future<
                _i2.Either<_i13.Failure, _i17.HomeGetPracticeResponse>>.value(
            _FakeEither_0<_i13.Failure, _i17.HomeGetPracticeResponse>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i12.Future<_i2.Either<_i13.Failure, _i17.HomeGetPracticeResponse>>);
}

/// A class which mocks [HomeReviseNowUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeReviseNowUseCase extends _i1.Mock
    implements _i32.HomeReviseNowUseCase {
  MockHomeReviseNowUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<
      _i2.Either<_i13.Failure, _i22.PracticeReviseNowResponse>> call() => (super
              .noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i12.Future<
                _i2.Either<_i13.Failure, _i22.PracticeReviseNowResponse>>.value(
            _FakeEither_0<_i13.Failure, _i22.PracticeReviseNowResponse>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i12
          .Future<_i2.Either<_i13.Failure, _i22.PracticeReviseNowResponse>>);
}

/// A class which mocks [HomeScheduledTestUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeScheduledTestUseCase extends _i1.Mock
    implements _i33.HomeScheduledTestUseCase {
  MockHomeScheduledTestUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i19.HomeGetScheduledTestResponse>>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i12.Future<
                    _i2.Either<_i13.Failure,
                        List<_i19.HomeGetScheduledTestResponse>>>.value(
                _FakeEither_0<_i13.Failure,
                    List<_i19.HomeGetScheduledTestResponse>>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2
              .Either<_i13.Failure, List<_i19.HomeGetScheduledTestResponse>>>);
}

/// A class which mocks [HomeUserFeaturesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeUserFeaturesUseCase extends _i1.Mock
    implements _i34.HomeUserFeaturesUseCase {
  MockHomeUserFeaturesUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i18.FeatureConfigResponse>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i12
            .Future<_i2.Either<_i13.Failure, _i18.FeatureConfigResponse>>.value(
            _FakeEither_0<_i13.Failure, _i18.FeatureConfigResponse>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i12.Future<_i2.Either<_i13.Failure, _i18.FeatureConfigResponse>>);
}

/// A class which mocks [HomeUserProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeUserProfileUseCase extends _i1.Mock
    implements _i35.HomeUserProfileUseCase {
  MockHomeUserProfileUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i21.UserProfileInformationResponse>>
      call() => (super.noSuchMethod(
            Invocation.method(
              #call,
              [],
            ),
            returnValue: _i12.Future<
                _i2.Either<_i13.Failure,
                    _i21.UserProfileInformationResponse>>.value(_FakeEither_0<
                _i13.Failure, _i21.UserProfileInformationResponse>(
              this,
              Invocation.method(
                #call,
                [],
              ),
            )),
          ) as _i12.Future<
              _i2.Either<_i13.Failure, _i21.UserProfileInformationResponse>>);
}

/// A class which mocks [HomeDishaConfigUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeDishaConfigUseCase extends _i1.Mock
    implements _i36.HomeDishaConfigUseCase {
  MockHomeDishaConfigUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.HomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeHomeRepository_9(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i11.HomeRepository);

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i15.HomeDishaConfigResponse>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i12.Future<
                _i2.Either<_i13.Failure, _i15.HomeDishaConfigResponse>>.value(
            _FakeEither_0<_i13.Failure, _i15.HomeDishaConfigResponse>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i12.Future<_i2.Either<_i13.Failure, _i15.HomeDishaConfigResponse>>);
}
